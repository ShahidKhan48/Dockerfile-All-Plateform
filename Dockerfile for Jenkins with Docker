# Use the official Jenkins image as the base
FROM jenkins/jenkins:lts

# Switch to the root user to install additional packages
USER root

# Update the package lists and install required tools
RUN apt-get update && apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg2 \
    software-properties-common \
    git \
    python3 \
    python3-pip \
    openjdk-11-jdk

# Install Docker
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - && \
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable" && \
    apt-get update && apt-get install -y docker-ce-cli

# Add Jenkins to the Docker group so it can run Docker commands without sudo
RUN groupadd docker && usermod -aG docker jenkins

# Install Python packages (optional if you want to use pip)
RUN python3 -m pip install --upgrade pip setuptools

# Set Java environment variables for Jenkins
ENV JAVA_HOME /usr/lib/jvm/java-11-openjdk-amd64
ENV PATH $JAVA_HOME/bin:$PATH

# Clean up the package lists to reduce the image size
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Switch back to Jenkins user
USER jenkins

# Expose the Jenkins default port
EXPOSE 8080

# Expose the Docker socket (optional, needed for Docker builds in Jenkins)
VOLUME /var/run/docker.sock

# Command to run Jenkins
CMD ["/usr/bin/tini", "--", "/usr/local/bin/jenkins.sh"]


